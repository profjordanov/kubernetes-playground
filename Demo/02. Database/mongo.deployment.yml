apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
type: Opaque
data:
  db-root-password: cGFzc3dvcmQ= # WARNING! NOT SECURE! BASE64 ENCODED 'password'!

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-configuration
data:
  db-name: CodeItUp
  db-root-username: admin

---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
# The reclaim policy applies to the persistent volumes not the storage class itself. 
# PVs and PVCs that are created using that storage class will inherit the reclaim policy set here.
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

# Note: This is local storage Persistent Volume. It is useful for development scenarios on Docker Desktop.
# On producation, use the Persistent Volume configurations shown in the presentation.
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  local:
    path: /run/desktop/mnt/host/c/temp/data/db # Change to '/tmp/data/db', if you are on Mac/Linux.
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-desktop

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      volumes:
      - name: mongo-volume
        persistentVolumeClaim:
          claimName: mongo-pvc
      containers:
      - env:
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mongo-configuration
              key: db-name
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              name: mongo-configuration
              key: db-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: db-root-password
        image: mongo
        name: mongo
        ports:
        - containerPort: 27017    
        volumeMounts:
        - name: mongo-volume
          mountPath: /data/db
